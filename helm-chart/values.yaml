# Default values for simple-prima-nota
global:
  imageRegistry: "docker.io"

postgresql:
  # COMPATIBILITÀ: Mantieni enabled per retrocompatibilità
  enabled: false  # Disabilita deployment tradizionale
  
  # NUOVO: Abilita CloudNativePG
  cloudnativepg:
    enabled: true
    instances: 3  # 1 primary + 2 standby per HA
    
    # WAL storage separato per performance
    walStorage:
      enabled: true
      size: "2Gi"  # Dimensione WAL storage
  
  # COMPATIBILITÀ: Mantieni configurazione esistente
  image:
    registry: docker.io
    repository: postgres
    tag: "15"
    pullPolicy: IfNotPresent
    
  auth:
    database: prima_nota
    username: postgres
    password: ""  # Sarà generata automaticamente se vuota
    
  persistence:
    enabled: true
    size: 8Gi
    storageClass: "ceph-block"  # Aggiungi la tua storage class
    accessModes:
      - ReadWriteOnce
      
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
      
  service:
    type: ClusterIP
    port: 5432
  
  # NUOVO: Configurazione parametri PostgreSQL
  parameters:
    # Tuning performance
    max_connections: "200"
    shared_buffers: "128MB"
    effective_cache_size: "384MB"
    maintenance_work_mem: "64MB"
    random_page_cost: "1.1"
    # Log configuration
    log_statement: "none"
    log_min_duration_statement: "1000"
  
  # NUOVO: Monitoring
  monitoring:
    enabled: true
    podMonitor: true
  
  # NUOVO: Backup configuration
  backup:
    enabled: true
    target: "prefer-standby"
    retentionPolicy: "30d"
    method: "barmanObjectStore"
    
    # Schedule backup automatici
    schedule:
      enabled: true
      daily: "0 2 * * *"    # Ogni giorno alle 2:00
      weekly:
        enabled: true
        cron: "0 1 * * 0"   # Domenica alle 1:00
    
    # Configurazione S3/MinIO per backup
    barmanObjectStore:
      destinationPath: "s3://postgresql-backups/prima-nota"
      endpointURL: "http://minio.velero-system.svc.cluster.local:9000"
      s3Credentials:
        # Credenziali dirette (per semplicità)
        accessKey: "minioadmin"
        secretKey: "minioadmin"
        # O referenza a secret esistente
        accessKeyId:
          name: "prima-nota-backup-credentials"
          key: "ACCESS_KEY_ID"
        secretAccessKey:
          name: "prima-nota-backup-credentials"
          key: "SECRET_ACCESS_KEY"
      wal:
        compression: "gzip"
        retention: "7d"
      data:
        compression: "gzip"
        immediateCheckpoint: true
        jobs: 2

backend:
  enabled: true
  image:
    registry: docker.io
    repository: vcnngr/pnbackend
    tag: "latest"
    pullPolicy: IfNotPresent
  replicaCount: 1
  service:
    type: ClusterIP
    port: 3001
  env:
    NODE_ENV: production
    PORT: 3001
    JWT_SECRET: ""
    RATE_LIMIT_WINDOW_MS: 900000
    RATE_LIMIT_MAX_REQUESTS: 100
    MAX_FILE_SIZE: 10485760
    LOG_LEVEL: info
  defaultUser:
    enabled: true
    username: admin
    email: admin@prima-nota.com
    password: ""
    firstName: Admin
    lastName: User
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  livenessProbe:
    httpGet:
      path: /api/health
      port: 3001
    initialDelaySeconds: 50
    periodSeconds: 30
  readinessProbe:
    httpGet:
      path: /api/health
      port: 3001
    initialDelaySeconds: 30
    periodSeconds: 15

frontend:
  enabled: true
  image:
    registry: docker.io
    repository: vcnngr/pnfrontend
    tag: "latest"
    pullPolicy: IfNotPresent
  replicaCount: 1
  service:
    type: ClusterIP
    port: 80
  env:
    REACT_APP_API_URL: /api
    REACT_APP_NAME: Prima Nota
    REACT_APP_VERSION: 1.0.0
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi

pgadmin:
  enabled: true
  image:
    registry: docker.io
    repository: dpage/pgadmin4
    tag: "9.2"
    pullPolicy: IfNotPresent
  auth:
    email: admin@prima-nota.com
    password: ""
  env:
    PGADMIN_DEFAULT_EMAIL: admin@prima-nota.com
    PGADMIN_DEFAULT_PASSWORD: ""
    PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "True"
    PGADMIN_CONFIG_LOGIN_BANNER: "Prima Nota - Database Management"
    PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: "20"
    PGADMIN_LISTEN_PORT: "5050"
    PGADMIN_CONFIG_WTF_CSRF_TIME_LIMIT: "None"
    PGADMIN_CONFIG_UPGRADE_CHECK_ENABLED: "False"
    PGADMIN_CONFIG_SHOW_GRAVATAR_IMAGE: "False"
  service:
    type: ClusterIP
    port: 5050
  resources:
    limits:
      cpu: 700m
      memory: 512Mi
    requests:
      cpu: 400m
      memory: 256Mi
  livenessProbe:
    httpGet:
      path: /misc/ping
      port: pgadmin
    initialDelaySeconds: 120
    periodSeconds: 60
    timeoutSeconds: 30
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: /misc/ping
      port: pgadmin
    initialDelaySeconds: 90
    periodSeconds: 45
    timeoutSeconds: 5
    failureThreshold: 3
  persistence:
    enabled: true
    size: 1Gi
    accessModes:
      - ReadWriteOnce

ingress:
  enabled: true
  className: "traefik"
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    cert-manager.io/cluster-issuer: le-global-issuer
  hosts:
    - host: prima-nota.example.com
      paths:
        - path: /
          pathType: Prefix
          service: frontend
        - path: /pgadmin
          pathType: Prefix
          service: pgadmin
  tls:
    - secretName: example-tls
      hosts:
        - prima-nota.example.com

serviceAccount:
  create: true
  annotations: {}
  name: ""

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: true
  runAsUser: 1000
