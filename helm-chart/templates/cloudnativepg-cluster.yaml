{{- if .Values.cloudnativepg.enabled }}
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: {{ .Values.cloudnativepg.cluster.name | default (printf "%s-postgres" (include "prima-nota.fullname" .)) }}
  labels:
    {{- include "prima-nota.labels" . | nindent 4 }}
    app.kubernetes.io/component: cloudnativepg
  namespace: {{ .Release.Namespace }}
spec:
  instances: {{ .Values.cloudnativepg.cluster.instances }}
  primaryUpdateStrategy: {{ .Values.cloudnativepg.cluster.primaryUpdateStrategy }}
  
  imageName: {{ .Values.cloudnativepg.cluster.imageName }}
  
  # === SUPERUSER ACCESS ===
  enableSuperuserAccess: {{ .Values.cloudnativepg.cluster.enableSuperuserAccess | default false }}
  
  # === CLUSTER TIMING CONFIGURATION ===
  {{- if .Values.cloudnativepg.cluster.failoverDelay }}
  failoverDelay: {{ .Values.cloudnativepg.cluster.failoverDelay | int }}
  {{- end }}
  {{- if .Values.cloudnativepg.cluster.startDelay }}
  startDelay: {{ .Values.cloudnativepg.cluster.startDelay | int }}
  {{- end }}
  {{- if .Values.cloudnativepg.cluster.stopDelay }}
  stopDelay: {{ .Values.cloudnativepg.cluster.stopDelay | int }}
  {{- end }}
  {{- if .Values.cloudnativepg.cluster.switchoverDelay }}
  switchoverDelay: {{ .Values.cloudnativepg.cluster.switchoverDelay | int }}
  {{- end }}
  
  # === SYNCHRONOUS REPLICATION ===
  {{- if .Values.cloudnativepg.cluster.maxSyncReplicas }}
  maxSyncReplicas: {{ .Values.cloudnativepg.cluster.maxSyncReplicas | int }}
  {{- end }}
  {{- if .Values.cloudnativepg.cluster.minSyncReplicas }}
  minSyncReplicas: {{ .Values.cloudnativepg.cluster.minSyncReplicas | int }}
  {{- end }}
  
  # === SUPERUSER SECRET ===
  superuserSecret:
    name: {{ .Values.cloudnativepg.cluster.superuserSecret.name | default (printf "%s-superuser-credentials" (include "prima-nota.fullname" .)) }}
  
  bootstrap:
    initdb:
      database: {{ .Values.cloudnativepg.cluster.bootstrap.database }}
      owner: {{ .Values.cloudnativepg.cluster.bootstrap.owner }}
      {{- if .Values.cloudnativepg.cluster.bootstrap.localeCollate }}
      localeCollate: {{ .Values.cloudnativepg.cluster.bootstrap.localeCollate }}
      {{- end }}
      {{- if .Values.cloudnativepg.cluster.bootstrap.localeCType }}
      localeCType: {{ .Values.cloudnativepg.cluster.bootstrap.localeCType }}
      {{- end }}
      secret:
        name: {{ .Values.cloudnativepg.cluster.bootstrap.secret.name | default (printf "%s-superuser-credentials" (include "prima-nota.fullname" .)) }}
  
  # === POSTGRESQL CONFIGURATION ===
  {{- if .Values.cloudnativepg.cluster.postgresql }}
  postgresql:
    {{- if .Values.cloudnativepg.cluster.postgresql.parameters }}
    parameters:
      {{- toYaml .Values.cloudnativepg.cluster.postgresql.parameters | nindent 6 }}
    {{- end }}
    {{- if .Values.cloudnativepg.cluster.postgresql.pg_hba }}
    pg_hba:
      {{- toYaml .Values.cloudnativepg.cluster.postgresql.pg_hba | nindent 6 }}
    {{- end }}
  {{- end }}

  {{- if .Values.cloudnativepg.cluster.bootstrap.initSql.enabled }}
  # === VOLUME PER SCRIPT SQL INIT ===
  additionalVolumes:
    - name: init-sql-scripts
      configMap:
        name: {{ include "prima-nota.fullname" . }}-config
        items:
        - key: init.sql
          path: init.sql
          mode: 0644
  
  additionalVolumeMounts:
    - name: init-sql-scripts
      mountPath: /docker-entrypoint-initdb.d
      readOnly: true
  {{- end }}
  
  # === STORAGE CONFIGURATION ===
  storage:
    size: {{ .Values.cloudnativepg.cluster.storage.size }}
    {{- if .Values.cloudnativepg.cluster.storage.storageClass }}
    storageClass: {{ .Values.cloudnativepg.cluster.storage.storageClass }}
    {{- end }}
  
  # === RESOURCES ===
  {{- if .Values.cloudnativepg.cluster.resources }}
  resources:
    {{- toYaml .Values.cloudnativepg.cluster.resources | nindent 4 }}
  {{- end }}
  
  # === AFFINITY AND TOPOLOGY ===
  {{- if .Values.cloudnativepg.cluster.affinity }}
  affinity:
    {{- toYaml .Values.cloudnativepg.cluster.affinity | nindent 4 }}
  {{- end }}
  {{- if .Values.cloudnativepg.cluster.nodeSelector }}
  nodeSelector:
    {{- toYaml .Values.cloudnativepg.cluster.nodeSelector | nindent 4 }}
  {{- end }}
  {{- if .Values.cloudnativepg.cluster.tolerations }}
  tolerations:
    {{- toYaml .Values.cloudnativepg.cluster.tolerations | nindent 4 }}
  {{- end }}
  
  # === BACKUP CONFIGURATION ===
  {{- if .Values.cloudnativepg.cluster.backup.enabled }}
  backup:
    retentionPolicy: {{ .Values.cloudnativepg.cluster.backup.retentionPolicy }}
    barmanObjectStore:
      destinationPath: {{ .Values.cloudnativepg.cluster.backup.destinationPath }}
      
      {{- if .Values.cloudnativepg.cluster.backup.endpointURL }}
      endpointURL: {{ .Values.cloudnativepg.cluster.backup.endpointURL }}
      {{- end }}
      
      {{- /* CREDENZIALI BASATE SUL PROVIDER */ -}}
      {{- if .Values.cloudnativepg.cluster.backup.provider }}
      {{- $provider := .Values.cloudnativepg.cluster.backup.provider }}
      
      {{- if eq $provider "aws-s3" }}
      {{- if .Values.cloudnativepg.cluster.backup.credentials.secretName }}
      s3Credentials:
        accessKeyId:
          name: {{ .Values.cloudnativepg.cluster.backup.credentials.secretName }}
          key: {{ .Values.cloudnativepg.cluster.backup.credentials.accessKeyIdKey | default "ACCESS_KEY_ID" }}
        secretAccessKey:
          name: {{ .Values.cloudnativepg.cluster.backup.credentials.secretName }}
          key: {{ .Values.cloudnativepg.cluster.backup.credentials.secretAccessKeyKey | default "SECRET_ACCESS_KEY" }}
        {{- if .Values.cloudnativepg.cluster.backup.credentials.regionKey }}
        region:
          name: {{ .Values.cloudnativepg.cluster.backup.credentials.secretName }}
          key: {{ .Values.cloudnativepg.cluster.backup.credentials.regionKey }}
        {{- end }}
      {{- end }}
      
      {{- else if eq $provider "azure-blob-storage" }}
      {{- if .Values.cloudnativepg.cluster.backup.credentials.secretName }}
      azureCredentials:
        storageAccount:
          name: {{ .Values.cloudnativepg.cluster.backup.credentials.secretName }}
          key: {{ .Values.cloudnativepg.cluster.backup.credentials.accountNameKey | default "AZURE_STORAGE_ACCOUNT" }}
        {{- if .Values.cloudnativepg.cluster.backup.credentials.accountKeyKey }}
        storageKey:
          name: {{ .Values.cloudnativepg.cluster.backup.credentials.secretName }}
          key: {{ .Values.cloudnativepg.cluster.backup.credentials.accountKeyKey }}
        {{- else if .Values.cloudnativepg.cluster.backup.credentials.sasTokenKey }}
        storageSasToken:
          name: {{ .Values.cloudnativepg.cluster.backup.credentials.secretName }}
          key: {{ .Values.cloudnativepg.cluster.backup.credentials.sasTokenKey }}
        {{- end }}
      {{- end }}
      
      {{- else if eq $provider "google-cloud-storage" }}
      {{- if .Values.cloudnativepg.cluster.backup.credentials.secretName }}
      googleCredentials:
        applicationCredentials:
          name: {{ .Values.cloudnativepg.cluster.backup.credentials.secretName }}
          key: {{ .Values.cloudnativepg.cluster.backup.credentials.serviceAccountKey | default "service-account.json" }}
      {{- end }}
      {{- end }}
      {{- end }}
      
      {{- /* Configurazioni WAL */ -}}
      {{- if .Values.cloudnativepg.cluster.backup.wal }}
      wal:
        {{- if .Values.cloudnativepg.cluster.backup.wal.maxParallel }}
        maxParallel: {{ .Values.cloudnativepg.cluster.backup.wal.maxParallel }}
        {{- end }}
        {{- if .Values.cloudnativepg.cluster.backup.wal.compression }}
        compression: {{ .Values.cloudnativepg.cluster.backup.wal.compression }}
        {{- end }}
      {{- end }}
      
      {{- /* Configurazioni Data */ -}}
      {{- if .Values.cloudnativepg.cluster.backup.data }}
      data:
        {{- if .Values.cloudnativepg.cluster.backup.data.compression }}
        compression: {{ .Values.cloudnativepg.cluster.backup.data.compression }}
        {{- end }}
        {{- if .Values.cloudnativepg.cluster.backup.data.jobs }}
        jobs: {{ .Values.cloudnativepg.cluster.backup.data.jobs }}
        {{- end }}
        {{- if .Values.cloudnativepg.cluster.backup.data.immediateCheckpoint }}
        immediateCheckpoint: {{ .Values.cloudnativepg.cluster.backup.data.immediateCheckpoint }}
        {{- end }}
      {{- end }}
        {{- end }}
  
  # === ENVIRONMENT VARIABLES ===
  {{- if .Values.cloudnativepg.cluster.backup.enabled }}
  {{- $provider := .Values.cloudnativepg.cluster.backup.provider }}
  
  {{- if eq $provider "aws-s3" }}
  {{- if .Values.cloudnativepg.cluster.backup.credentials.secretName }}
  env:
    - name: AWS_ACCESS_KEY_ID
      valueFrom:
        secretKeyRef:
          name: {{ .Values.cloudnativepg.cluster.backup.credentials.secretName }}
          key: {{ .Values.cloudnativepg.cluster.backup.credentials.accessKeyIdKey | default "ACCESS_KEY_ID" }}
    - name: AWS_SECRET_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: {{ .Values.cloudnativepg.cluster.backup.credentials.secretName }}
          key: {{ .Values.cloudnativepg.cluster.backup.credentials.secretAccessKeyKey | default "SECRET_ACCESS_KEY" }}
    {{- if .Values.cloudnativepg.cluster.backup.endpointURL }}
    - name: AWS_ENDPOINT_URL
      value: {{ .Values.cloudnativepg.cluster.backup.endpointURL }}
    {{- end }}
    {{- if .Values.cloudnativepg.cluster.backup.credentials.regionKey }}
    - name: AWS_DEFAULT_REGION
      valueFrom:
        secretKeyRef:
          name: {{ .Values.cloudnativepg.cluster.backup.credentials.secretName }}
          key: {{ .Values.cloudnativepg.cluster.backup.credentials.regionKey }}
    {{- end }}
  {{- end }}
  
  {{- else if eq $provider "azure-blob-storage" }}
  {{- if .Values.cloudnativepg.cluster.backup.credentials.secretName }}
  env:
    - name: AZURE_STORAGE_ACCOUNT
      valueFrom:
        secretKeyRef:
          name: {{ .Values.cloudnativepg.cluster.backup.credentials.secretName }}
          key: {{ .Values.cloudnativepg.cluster.backup.credentials.accountNameKey | default "AZURE_STORAGE_ACCOUNT" }}
    {{- if .Values.cloudnativepg.cluster.backup.credentials.accountKeyKey }}
    - name: AZURE_STORAGE_KEY
      valueFrom:
        secretKeyRef:
          name: {{ .Values.cloudnativepg.cluster.backup.credentials.secretName }}
          key: {{ .Values.cloudnativepg.cluster.backup.credentials.accountKeyKey }}
    {{- else if .Values.cloudnativepg.cluster.backup.credentials.sasTokenKey }}
    - name: AZURE_STORAGE_SAS_TOKEN
      valueFrom:
        secretKeyRef:
          name: {{ .Values.cloudnativepg.cluster.backup.credentials.secretName }}
          key: {{ .Values.cloudnativepg.cluster.backup.credentials.sasTokenKey }}
    {{- end }}
  {{- end }}
  
  {{- else if eq $provider "google-cloud-storage" }}
  {{- if .Values.cloudnativepg.cluster.backup.credentials.secretName }}
  env:
    - name: GOOGLE_APPLICATION_CREDENTIALS_JSON
      valueFrom:
        secretKeyRef:
          name: {{ .Values.cloudnativepg.cluster.backup.credentials.secretName }}
          key: {{ .Values.cloudnativepg.cluster.backup.credentials.serviceAccountKey | default "service-account.json" }}
  {{- end }}
  {{- end }}
  {{- end }}
  
{{- end }}