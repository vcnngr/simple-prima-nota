{{- if .Values.backend.defaultUser.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "prima-nota.fullname" . }}-init-user
  labels:
    {{- include "prima-nota.labels" . | nindent 4 }}
    app.kubernetes.io/component: init-user
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  backoffLimit: 3
  template:
    metadata:
      labels:
        {{- include "prima-nota.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: init-user
    spec:
      restartPolicy: OnFailure
      initContainers:
      - name: wait-for-backend
        image: curlimages/curl:latest
        command:
        - sh
        - -c
        - |
          echo "Waiting for backend..."
          for i in $(seq 1 60); do
            if nc -z {{ include "prima-nota.fullname" . }}-backend 3001; then
              echo "Backend ready!"
              sleep 30
              exit 0
            fi
            echo "Attempt $i/60 - waiting 5s..."
            sleep 5
          done
          exit 0
      containers:
      - name: create-user
        image: curlimages/curl:latest
        env:
        - name: BACKEND_URL
          value: "http://{{ include "prima-nota.fullname" . }}-backend:3001"
        - name: USERNAME
          value: {{ .Values.backend.defaultUser.username }}
        - name: EMAIL
          value: {{ .Values.backend.defaultUser.email }}
        - name: FIRST_NAME
          value: {{ .Values.backend.defaultUser.firstName }}
        - name: LAST_NAME
          value: {{ .Values.backend.defaultUser.lastName }}
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "prima-nota.fullname" . }}-secret
              key: default-user-password
        command:
        - sh
        - -c
        - |
          echo "Creating user ${USERNAME}..."
          ENDPOINTS="/api/auth/register /auth/register"
          
          for endpoint in $ENDPOINTS; do
            echo "Trying endpoint: ${BACKEND_URL}${endpoint}"
            for i in $(seq 1 3); do
              if curl -X POST "${BACKEND_URL}${endpoint}" \
                -H "Content-Type: application/json" \
                --connect-timeout 10 --max-time 30 \
                -d "{
                  \"username\": \"${USERNAME}\",
                  \"email\": \"${EMAIL}\",
                  \"firstName\": \"${FIRST_NAME}\",
                  \"lastName\": \"${LAST_NAME}\",
                  \"password\": \"${PASSWORD}\"
                }"; then
                echo "User creation request sent!"
                break
              fi
              echo "Attempt $i/3 failed, retrying..."
              sleep 5
            done
          done
          echo "User creation completed."
          exit 0
{{- end }}
